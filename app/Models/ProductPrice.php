<?php

namespace App\Models;

use Carbon\Carbon;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;

class ProductPrice extends Model
{
    use HasFactory;

    protected $fillable = [
        'price',
        'datetime',
        'product_id'
    ];

    protected $casts = [
        'datetime' => 'datetime'
    ];

    public function product():BelongsTo
    {
        return $this->belongsTo(Product::class);
    }

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::created(function(ProductPrice $price){
            self::updateProductPriceIfNeeded($price);
        });

        static::updated(function(ProductPrice $price){
            self::updateProductPriceIfNeeded($price);
        });

        static::deleted(function(ProductPrice $price){
            self::updateProductPriceIfNeeded($price);
        });
    }

    /**
     * @param ProductPrice $price
     */
    protected static function updateProductPriceIfNeeded(ProductPrice $price): void
    {
        $product = $price->product;
        $latestPrice = optional($product->prices()->latest('datetime')->first())->price;

        if ($latestPrice != $product->current_price) {
            $product->update([
                'current_price' => $latestPrice ?? 0
            ]);
        }
    }
}
